version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: tgdmemory-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-tgdmemory}
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "27017:27017"
    networks:
      - tgdmemory-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # TGD Memory Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tgdmemory-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/${MONGO_DB_NAME:-tgdmemory}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-pro}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
    volumes:
      - app_logs:/app/server/logs
      - cache_data:/app/public/explanations-cache
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - tgdmemory-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/ping', (res) => { res.statusCode === 200 ? process.exit(0) : process.exit(1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: tgdmemory-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - app_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - tgdmemory-network
    profiles:
      - "nginx"  # Optional service, enable with --profile nginx

volumes:
  mongodb_data:
    driver: local
  app_logs:
    driver: local
  cache_data:
    driver: local

networks:
  tgdmemory-network:
    driver: bridge
